# Maintainer: Antoine Martin <antoine.martin@protonmail.com>
pkgname=py-envtlp
pkgver=master
pkgrel=0
pkgdesc="Render jinja2 templates on the command line using shell environment variables"
url='https://github.com/andreasjansson/envtpl'
arch="noarch"
license="GPL"
depends="python py-argparse py-jinja"
makedepends="git py-setuptools py-sh py-six"
source="$pkgname-$pkgver.tar.gz"
_giturl="https://github.com/andreasjansson/envtpl.git"
_gittag="$pkgver"
builddir="$srcdir/$pkgname"
options="!check"

snapshot() {
	mkdir -p "$srcdir"
	cd "${srcdir}"
	if ! [ -d $pkgname.git ]; then
		git clone $_giturl $pkgname.git || return 1
		cd $pkgname.git
	else
		cd $pkgname.git
		git fetch || return 1
	fi

	echo "Checking out"
	git checkout $_gittag
	echo "Repo archive"
	git archive --prefix="$pkgname/" -o dam.tar --format "tar" $_gittag

	echo "Submod update"
	git submodule update --init
	cd bunc
	echo "Submod archive"
	git archive --prefix="$pkgname/bunc/" --format="tar" -o "../bunc.tar" "master"
	cd ..
    
   
	tar --concatenate --file dam.tar bunc.tar
	gzip dam.tar -c > "$SRCDEST"/$pkgname-$pkgver.tar.gz
	ln -s "$SRCDEST"/$pkgname-$pkgver.tar.gz "$startdir"/$pkgname-$pkgver.tar.gz 
}

build() {
	cd "$builddir"
    python setup.py build
}

check() {
    cd "$builddir"
    python setup.pytest
}

package() {
	cd "$builddir"
	python setup.py install --root="${pkgdir}" --optimize 1 --skip-build
}
